{"version":3,"sources":["utils/history.js","css/constant.jsx","component/blocks/Header.jsx","component/layouts/Main.jsx","component/pages/home/title_task.jsx","component/pages/HomePage.jsx","component/pages/task_form/TaskForm.jsx","component/pages/CreatePage.jsx","component/pages/UpdatePage.jsx","component/pages/DeletePage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["history","createBrowserHistory","LOGO","fontSize","textTransform","fontWeight","color","cursor","Header","className","style","onClick","push","type","size","location","pathname","goBack","Main","exact","path","Component","component","args","render","routeProps","columns","title","dataIndex","key","align","width","text","record","index","status","ghost","console","log","HomePage","taskList","dataSource","a","TaskForm","createTask","createKey","updateTask","computedMatch","getTask","k","parseInt","params","to","labelCol","span","wrapperCol","name","onFinish","startDate","values","year","month","date","today","Date","getFullYear","getMonth","getDate","handleStartDate","initialValues","taskName","moment","setInitialValues","textAlign","Item","display","hidden","label","rules","required","message","placeholder","Option","value","htmlType","marginLeft","CreatePage","UpdatePage","DeletePage","deleteTask","App","useState","setTaskList","useEffect","localStorage","tasks","JSON","parse","save","stringify","find","task","newTask","sort","b","i","length","splice","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78f8039e.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export const LOGO = {\n    fontSize: 30,\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    color: 'white',\n    cursor: 'pointer'\n}\n","import {Button} from \"antd\";\nimport {LOGO} from \"../../css/constant\";\nimport history from \"../../utils/history\";\n\nfunction Header() {\n    return (\n        <div className=\"header-container\">\n            <div style={LOGO} onClick={() => {\n                history.push('/');\n            }}>\n                Quản lý công việc\n            </div>\n            <Button type=\"primary\" size=\"lager\" onClick={\n                () => {\n                    if (history.location.pathname === '/') {\n                        history.push('/create')\n                    } else {\n                        history.goBack();\n                    }\n                }\n            }>{history.location.pathname === '/' ? \"Thêm công việc\" : \"Quay lại\"}</Button>\n        </div>\n    );\n}\n\nexport default Header;\n","import {Route} from \"react-router-dom\";\n\nimport Header from \"../blocks/Header\";\n\nfunction Main({exact, path, component: Component, ...args}) {\n    return (\n        <Route\n            exact={exact}\n            path={path}\n            render={(routeProps) => {\n                return (\n                    <>\n                        <Header />\n                        <div className=\"main-container\">\n                            <Component {...routeProps} {...args} />\n                        </div>\n                    </>\n                )\n            }}\n        />\n    );\n}\nexport default Main;\n","import {Button, Space} from \"antd\";\nimport history from \"../../../utils/history\";\n\nexport const columns = [\n    {\n        title: 'STT',\n        dataIndex: 'stt',\n        key: 'stt',\n        align: \"center\",\n        width: \"5%\",\n        render: (text, record, index) => index + 1\n    },\n    {\n        title: 'Tên',\n        dataIndex: 'taskName',\n        key: 'taskName',\n        align: \"center\",\n        width: \"27.5%\",\n    },\n    {\n        title: 'Ngày bắt đầu',\n        dataIndex: 'startDate',\n        key: 'startDate',\n        align: \"center\",\n        width: \"27.5%\",\n    },\n    {\n        title: 'Trạng thái',\n        dataIndex: 'status',\n        key: 'status',\n        align: \"center\",\n        width: \"20%\",\n        render: (text, record) => {\n            return (\n                <Button type={record.status ? \"primary\" : \"primary doing\"} ghost onClick={()=>{\n                    console.log(record)\n                }}>\n                    {!record.status ? \"Chưa hoàn thành\" : \"Đã hoàn thành\"}\n                </Button>\n            )\n        }\n    },\n    {\n        title: 'Hành động',\n        key: 'action',\n        align: \"center\",\n        width: \"20%\",\n        render: (text, record) => (\n            <Space size=\"middle\">\n                <Button type=\"primary update\" onClick={() => {\n                    history.push(`/update/${record.key}`)\n                }}> Sửa </Button>\n                <Button type=\"primary delete\" onClick={() => {\n                    history.push(`/delete/${record.key}`)\n                }}> Xóa </Button>\n            </Space>\n        ),\n    },\n];\n","import {Table, Space} from 'antd';\n\nimport {columns} from \"./home/title_task\";\n\nimport '../../css/task-list-btn.css';\n\nfunction HomePage({taskList}) {\n    return (\n        <div>\n            <Table columns={columns} dataSource={taskList} a=\"a\"/>\n        </div>\n    );\n}\n\nexport default HomePage;\n","import {Form, Input, InputNumber, Button, DatePicker, Select} from 'antd';\nimport moment from \"moment\";\n\nimport history from '../../../utils/history';\n\n\nimport '../../../css/form.css';\nimport {Redirect} from \"react-router-dom\";\n\nfunction TaskForm({createTask, createKey, updateTask, type, computedMatch, getTask}) {\n\n    if (type === 'update'){\n        let k = parseInt(computedMatch.params.key);\n        if (!getTask(k)){\n            return (<Redirect to={'/'}/>);\n        }\n    }\n\n    let handleStartDate = (startDate) => {\n        if (!startDate) {\n            let today = new Date();\n            return `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;\n        } else {\n            return `${startDate.year()}-${startDate.month() + 1}-${startDate.date()}`;\n        }\n    }\n\n    const handleSubmit = ({startDate, ...values}) => {\n        startDate = handleStartDate(startDate);\n        if (type === 'create') {\n            createTask({\n                ...values,\n                startDate\n            });\n        }\n        if (type === 'update') {\n            updateTask({\n                ...values,\n                startDate\n            })\n        }\n        return history.push('/');\n    }\n\n    const setInitialValues = () => {\n        if (type === 'create') {\n            return {\n                status: 0,\n                key: createKey()\n            }\n        } else {\n            let k = parseInt(computedMatch.params.key);\n            const { taskName, status, startDate } = getTask(k);\n            return {\n                key: k,\n                status,\n                taskName,\n                startDate: moment(startDate)\n            }\n        }\n    }\n\n    return (\n        <Form labelCol={{span: 6}}\n              wrapperCol={{span: 16}}\n              name=\"taskForm\"\n              className=\"task-form\"\n              onFinish={handleSubmit}\n              initialValues={setInitialValues()}\n        >\n            <h1 style={{textAlign: \"center\"}}>{type === 'create' ? 'Thêm công việc' : \"Sửa công việc\"}</h1>\n            <Form.Item style={{display: \"none\"}} name=\"key\">\n                <Input hidden/>\n            </Form.Item>\n            <Form.Item name=\"taskName\" label=\"Tên công việc\"\n                       rules={[\n                           {\n                               required: true,\n                               message: \"Vui lòng nhập tên công việc!\"\n                           }\n                       ]}\n            >\n                <Input placeholder=\"Tên công việc\"/>\n            </Form.Item>\n            <Form.Item label=\"Ngày bắt đầu\" name=\"startDate\">\n                <DatePicker style={{width: \"100%\"}} placeholder=\"Ngày bắt đầu\"/>\n            </Form.Item>\n            <Form.Item label=\"Trạng thái\" name=\"status\">\n                <Select style={{width: \"100%\"}}>\n                    <Select.Option value={1}>Đã hoàn thành</Select.Option>\n                    <Select.Option value={0}>Đang thực hiện</Select.Option>\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" style={{width: \"40%\", marginLeft: '55%'}}>\n                    {type === 'create' ? 'Thêm' : \"Sửa\"}\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default TaskForm;\n","import TaskForm from \"./task_form/TaskForm\";\nimport Main from \"../layouts/Main\";\n\nfunction CreatePage({createTask, createKey}) {\n    return(\n        <TaskForm createTask={createTask} createKey={createKey} type=\"create\"/>\n    );\n}\nexport default CreatePage;\n","import TaskForm from \"./task_form/TaskForm\";\n\nfunction UpdatePage({computedMatch, ...args}) {\n    return (\n        <TaskForm {...args} computedMatch={computedMatch} type=\"update\"/>\n    );\n}\n\nexport default UpdatePage;\n","import '../../css/alert.css';\nimport '../../css/task-list-btn.css';\n\nimport {Button, Space} from \"antd\";\n\nimport history from \"../../utils/history\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction DeletePage({computedMatch, deleteTask, getTask}) {\n    let k = parseInt(computedMatch.params.key);\n\n    if (!getTask(k)){\n        return (<Redirect to={'/'}/>);\n    }\n\n    const { taskName, status, startDate } = getTask(k);\n    return (\n        <div className=\"alert-delete\">\n            <h2>Bạn chắc chắn muốn xóa:</h2>\n            <hr/>\n            <div className=\"alert-content\">\n                <p><span>Tên công việc:</span> {taskName}</p>\n                <p><span>Ngày bắt đầu:</span> {startDate}</p>\n                <p><span>Tình trạng:</span> {status ? \"Đã hoàn thành\" : \"Đang thực hiện\"}</p>\n            </div>\n            <div className=\"alert-control\">\n                <Space>\n                    <Button type=\"primary delete btn-custom\" onClick={()=>{\n                        deleteTask(k);\n                        return history.push('/');\n                    }}>\n                        Xóa\n                    </Button>\n                    <Button type=\"primary btn-custom\" onClick={()=>{\n                        history.push('/');\n                    }}>\n                        Hủy\n                    </Button>\n                </Space>\n            </div>\n        </div>\n\n    );\n}\n\nexport default DeletePage;\n","import {Router, Switch} from \"react-router-dom\";\n\nimport history from './utils/history';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport Main from \"./component/layouts/Main\";\n\nimport HomePage from \"./component/pages/HomePage\";\nimport CreatePage from \"./component/pages/CreatePage\";\nimport UpdatePage from \"./component/pages/UpdatePage\";\nimport DeletePage from \"./component/pages/DeletePage\";\n\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n    const [taskList, setTaskList] = useState([]);\n\n    useEffect(() => {\n        if (localStorage && localStorage.tasks) {\n            let tasks = JSON.parse(localStorage.tasks)\n            setTaskList(tasks);\n        }\n    }, []);\n\n\n    const save = (tasks) => {\n        localStorage.tasks = JSON.stringify(tasks);\n    }\n\n    const createKey = () => {\n        let tasks = [...taskList];\n        tasks.sort((a, b) => {\n            return a.key - b.key;\n        });\n        let k = 0;\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].key - k > 1) {\n                return k + 1;\n            } else {\n                k++;\n            }\n        }\n        return tasks.length > 0 ? tasks[tasks.length - 1].key + 1 : 1;\n    };\n    const getTask = (key) => {\n        return taskList.find((task) => {\n            return task.key === key;\n        })\n    }\n    const createTask = (newTask) => {\n        let tasks = [\n            ...taskList,\n            newTask\n        ];\n        setTaskList(tasks)\n        save(tasks);\n    }\n\n    const updateTask = (task) => {\n        let newTask = taskList;\n        newTask.splice(task.key - 1, 1, task);\n        setTaskList(newTask);\n        save(newTask);\n    }\n\n    const deleteTask = key => {\n        let newTask = [...taskList];\n        newTask.splice(newTask.indexOf(getTask(key)), 1);\n        setTaskList(newTask);\n        save(newTask);\n    }\n    return (\n        <Router history={history}>\n            <Switch>\n                <Main exact path=\"/\" component={HomePage} taskList={taskList} setTaskList={setTaskList}/>\n                <Main exact path=\"/create\" component={CreatePage} createTask={createTask} createKey={createKey}/>\n                <Main exact path=\"/update/:key\" component={UpdatePage} getTask={getTask} updateTask={updateTask}/>\n                <Main exact path=\"/delete/:key\" component={DeletePage} getTask={getTask} deleteTask={deleteTask}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}